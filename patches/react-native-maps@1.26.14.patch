diff --git a/android/src/main/java/com/rnmaps/maps/MapView.java b/android/src/main/java/com/rnmaps/maps/MapView.java
index c3cff5dacdd77159f781261f0b378a2eaa590782..f1e155d0d0f403e378a76e4c9f1b0686e5869c2d 100644
--- a/android/src/main/java/com/rnmaps/maps/MapView.java
+++ b/android/src/main/java/com/rnmaps/maps/MapView.java
@@ -1,3 +1,4 @@
+
 package com.rnmaps.maps;
 
 import static androidx.core.content.PermissionChecker.checkSelfPermission;
@@ -14,6 +15,7 @@ import androidx.lifecycle.DefaultLifecycleObserver;
 import androidx.lifecycle.LifecycleOwner;
 
 import android.os.Bundle;
+import android.util.Log;
 import android.view.GestureDetector;
 import android.view.MotionEvent;
 import android.view.View;
@@ -228,16 +230,16 @@ public class MapView extends com.google.android.gms.maps.MapView implements Goog
 
     @Override
     public void onPause(LifecycleOwner owner) {
-        super.onPause();
         if (hasPermissions() && map != null) {
             //noinspection MissingPermission
             map.setMyLocationEnabled(false);
         }
         synchronized (MapView.this) {
-            if (!destroyed) {
+            if (!paused) {
+                super.onPause();
                 MapView.this.onPause();
+                paused = true;
             }
-            paused = true;
         }
     }
 
@@ -317,6 +319,12 @@ public class MapView extends com.google.android.gms.maps.MapView implements Goog
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
+
+        // Reset lifecycle flags when reattaching
+        synchronized (this) {
+            paused = false;
+        }
+
         attachLifecycleObserver();
         if (savedMapState != null) {
             super.onCreate(savedMapState);
@@ -335,12 +343,33 @@ public class MapView extends com.google.android.gms.maps.MapView implements Goog
     // Override onDetachedFromWindow to detach lifecycle observer
     @Override
     protected void onDetachedFromWindow() {
-        if (savedMapState == null) {
-            savedMapState = new Bundle();
+        synchronized (this) {
+            // Save instance state if not already saved and map is ready
+            if (map != null && isMapReady) {
+                try {
+                    if (savedMapState == null) {
+                        savedMapState = new Bundle();
+                    }
+                    super.onSaveInstanceState(savedMapState);
+                } catch (Exception e) {
+                    Log.e("MapView", "Error saving state in onDetachedFromWindow: " + e.getMessage());
+                    // Continue with cleanup even if state saving fails
+                }
+            }
+
+            // Pause safely if not already paused
+            if (!paused) {
+                onPause();
+            }
         }
-        super.onSaveInstanceState(savedMapState);
-        super.onPause();
-        super.onStop();
+
+        // These operations don't need synchronization
+        try {
+            onStop();
+        } catch (Exception e) {
+            Log.e("MapView", "Error during stop in onDetachedFromWindow: " + e.getMessage());
+        }
+
         savedFeatures = new HashMap<>(features);
         savedFeatures.keySet().forEach(this::removeFeatureAt);
         shouldRestorePadding = true;
@@ -743,19 +772,24 @@ public class MapView extends com.google.android.gms.maps.MapView implements Goog
     onDestroy is final method so I can't override it.
      */
     public synchronized void doDestroy() {
-        if (destroyed) {
-            return;
-        }
-        destroyed = true;
-        savedMapState = null;
-        savedFeatures = null;
+        try {
+            if (destroyed) {
+                return;
+            }
+            destroyed = true;
+            savedMapState = null;
+            savedFeatures = null;
+
+            if (!paused) {
+                onPause();
 
-        if (!paused) {
-            onPause();
-            paused = true;
+                paused = true;
+            }
+            onDestroy();
+            detachLifecycleObserver();
+        } catch (Exception e) {
+            Log.e("MapView", "Error in doDestroy: " + e.getMessage());
         }
-        onDestroy();
-        detachLifecycleObserver();
     }
 
     public void setInitialCameraSet(boolean initialCameraSet) {
