name: Blog Client CI/CD Pipeline

on:
  workflow_dispatch: # Allows the workflow to be triggered manually

jobs:
  blog_client_build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        uses: ./composites/ci-cd.ecr-login.yml
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          aws_ecr_repository: ${{ secrets.ECR_REPOSITORY }}

      - name: Create .env file from template
        run: |
          echo "NOTION_TOKEN=${{ secrets.NOTION_TOKEN }}" >> ./apps/blog-client/.env
          echo "NOTION_BLOG_DATABASE_ID=${{ secrets.NOTION_BLOG_DATABASE_ID }}" >> ./apps/blog-client/.env
          echo "NOTION_RESUME_DATABASE_ID=${{ secrets.NOTION_RESUME_DATABASE_ID }}" >> ./apps/blog-client/.env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> ./apps/blog-client/.env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> ./apps/blog-client/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./apps/blog-client/.env
          touch "./apps/coldsurf-io/.env"
          touch "./apps/wamuseum-client/.env"
          touch "./apps/billets-server/.env"
          touch "./apps/wamuseum-server/.env"

      - name: Docker Compose build and push
        uses: ./composites/ci-cd.docker-compose-build.yml
        with:
          docker_compose_service: 'blog-client'
          aws_ecr_repository: ${{ secrets.ECR_REPOSITORY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform apply
        uses: ./composites/ci-cd.terraform-apply.yml
        with:
          working_directory: ./terraform/
          aws_security_group_id: ${{ secrets.AWS_SECURITY_GROUP_ID }}

      - name: SSH ec2 and run cli
        uses: ./composites/ci-cd.ssh-ec2-cli.yml
        with:
          ec2_pem_key: ${{ secrets.EC2_PEM_KEY }}
          ec2_host: ${{ secrets.EC2_HOST }}
          ec2_user: ${{ secrets.EC2_USER }}
          ecr_repository: ${{ secrets.ECR_REPOSITORY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          aws_region: ${{ secrets.AWS_REGION }}
          docker_compose_service: 'blog-client'
