name: Wamuseum Server CI/CD Pipeline

on:
  workflow_dispatch: # Allows the workflow to be triggered manually
  push:
    tags: # Trigger on push to a tag
      - 'v*-wamuseum-server' # Adjust pattern as needed (e.g., v1.0.0)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        uses: ./.github/workflows/composites/ecr-login
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          aws_ecr_repository: ${{ secrets.ECR_REPOSITORY }}

      - name: Get the tag name
        id: get_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Create .env file from template
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./apps/wamuseum-server/.env
          echo "COLDSURF_AWS_S3_BUCKET=${{ secrets.COLDSURF_AWS_S3_BUCKET }}" >> ./apps/wamuseum-server/.env
          echo "COLDSURF_AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ./apps/wamuseum-server/.env
          echo "WAMUSEUM_SERVER_JWT_SECRET=${{ secrets.WAMUSEUM_SERVER_JWT_SECRET }}" >> ./apps/wamuseum-server/.env
          echo "WAMUSEUM_SERVER_KAKAO_REST_API_KEY=${{ secrets.WAMUSEUM_SERVER_KAKAO_REST_API_KEY }}" >> ./apps/wamuseum-server/.env
          echo "COLDSURF_AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ./apps/wamuseum-server/.env
          echo "COLDSURF_AWS_S3_REGION=${{ secrets.AWS_REGION }}" >> ./apps/wamuseum-server/.env
          echo "WAMUSEUM_SERVER_MAILER_EMAIL_ADDRESS=${{ secrets.WAMUSEUM_SERVER_MAILER_EMAIL_ADDRESS }}" >> ./apps/wamuseum-server/.env
          echo "WAMUSEUM_SERVER_MAILER_EMAIL_APP_PASSWORD=${{ secrets.WAMUSEUM_SERVER_MAILER_EMAIL_APP_PASSWORD }}" >> ./apps/wamuseum-server/.env
          echo "WAMUSEUM_SERVER_MAILER_SERVICE=${{ secrets.WAMUSEUM_SERVER_MAILER_SERVICE }}" >> ./apps/wamuseum-server/.env
          touch "./apps/billets-web/.env"
          touch "./apps/wamuseum-client/.env"
          touch "./apps/billets-server/.env"
          touch "./apps/blog-client/.env"

      - name: Create firebase service account key file
        env:
          BILLETS_FIREBASE_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.BILLETS_FIREBASE_SERVICE_ACCOUNT_KEY_FILE }}
          WAMUSEUM_SERVER_BILLETS_FIREBASE_SERVICE_ACCOUNT_KEY_FILE_PATH: ${{ secrets.WAMUSEUM_SERVER_BILLETS_FIREBASE_SERVICE_ACCOUNT_KEY_FILE_PATH }}
        run: |
          echo "$BILLETS_FIREBASE_SERVICE_ACCOUNT_KEY_FILE" > "$WAMUSEUM_SERVER_BILLETS_FIREBASE_SERVICE_ACCOUNT_KEY_FILE_PATH"
        working-directory: ./apps/wamuseum-server

      - name: Docker Compose build and push
        uses: ./.github/workflows/composites/docker-compose-build
        with:
          docker_compose_service: 'wamuseum-server'
          aws_ecr_repository: ${{ secrets.ECR_REPOSITORY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update ECS
        uses: ./.github/workflows/composites/update-ecs-task-def-service
        with:
          aws_ecr_repository: ${{ secrets.ECR_REPOSITORY }}
          docker_image_name: 'wamuseum-server'
          tag_name: ${{ env.TAG_NAME }}
          ecs_task_definition: ${{ secrets.ECS_TASK_DEFINITION }}
          ecs_service: ${{ secrets.ECS_SERVICE }}
          ecs_cluster: ${{ secrets.ECS_CLUSTER }}
