name: Billets Server CI/CD Pipeline

on:
  workflow_dispatch: # Allows the workflow to be triggered manually
  push:
    tags: # Trigger on push to a tag
      - 'v*-billets-server' # Adjust pattern as needed (e.g., v1.0.0)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to AWS
        uses: ./.github/workflows/composites/aws-login
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}

      - name: Create .env file from template
        run: |
          echo "BILLETS_APP_APPLE_BUNDLE_ID=${{ secrets.BILLETS_APP_APPLE_BUNDLE_ID }}" >> ./apps/billets-server/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./apps/billets-server/.env
          echo "GOOGLE_OAUTH_WEB_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_WEB_CLIENT_ID }}" >> ./apps/billets-server/.env
          echo "GOOGLE_OAUTH_WEB_IOS_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_WEB_IOS_CLIENT_ID }}" >> ./apps/billets-server/.env
          echo "BILLETS_SERVER_JWT_SECRET=${{ secrets.BILLETS_SERVER_JWT_SECRET }}" >> ./apps/billets-server/.env
          echo "BILLETS_SERVER_MAILER_EMAIL_ADDRESS=${{ secrets.BILLETS_SERVER_MAILER_EMAIL_ADDRESS }}" >> ./apps/billets-server/.env
          echo "BILLETS_SERVER_MAILER_EMAIL_APP_PASSWORD=${{ secrets.BILLETS_SERVER_MAILER_EMAIL_APP_PASSWORD }}" >> ./apps/billets-server/.env
          echo "BILLETS_SERVER_MAILER_SERVICE=${{ secrets.BILLETS_SERVER_MAILER_SERVICE }}" >> ./apps/billets-server/.env
          echo "PRISMA_CLI_BINARY_TARGETS=${{ secrets.PRISMA_CLI_BINARY_TARGETS }}" >> ./apps/billets-server/.env
          echo "SERVERLESS_ORG=${{ secrets.SERVERLESS_ORG }}" >> ./apps/billets-server/.env
          echo "SERVERLESS_DEPLOYMENT_BUCKET=${{ secrets.BILLETS_SERVER_SERVERLESS_DEPLOYMENT_BUCKET }}" >> ./apps/billets-server/.env
          echo "SERVERLESS_APP=${{ secrets.BILLETS_SERVER_SERVERLESS_APP }}" >> ./apps/billets-server/.env
          echo "SERVERLESS_SERVICE=${{ secrets.BILLETS_SERVER_SERVERLESS_SERVICE }}" >> ./apps/billets-server/.env
          echo "SERVERLESS_REGION=${{ secrets.SERVERLESS_REGION }}" >> ./apps/billets-server/.env
          echo "COLDSURF_AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ./apps/billets-server/.env
          echo "COLDSURF_AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ./apps/billets-server/.env
          echo "COLDSURF_AWS_REGION=${{ secrets.AWS_REGION }}" >> ./apps/billets-server/.env
          echo "COLDSURF_AWS_S3_BUCKET=${{ secrets.COLDSURF_AWS_S3_BUCKET }}" >> ./apps/billets-server/.env

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '20.16.0'

      - name: corepack enable
        run: corepack enable

      - name: setup yarnrc
        run: |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          echo "GITHUB_TOKEN=$GITHUB_TOKEN" >> $GITHUB_ENV

      - name: install dependencies
        run: yarn install

      - name: Check runtime
        run: |
          yarn check:runtime

      - name: build app
        run: yarn workspace @coldsurfers/billets-server build

      - name: serverless login
        run: |
          SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_ACCESS_KEY }}
          echo "SERVERLESS_ACCESS_KEY=$SERVERLESS_ACCESS_KEY" >> $GITHUB_ENV

      - name: run serverless deploy
        working-directory: ./apps/billets-server
        run: yarn serverless:deploy:prod
